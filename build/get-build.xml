<?xml version="1.0" encoding="UTF-8" ?>
<project name="Project Get Build" default="get-build"
	description="Tasks for upload project build and run depends operation">
	<target name="get-build" depends="init,get-build-properties"
		description="Upload high-level project build">
		<if>
			<or>
				<equals arg1="${get-build.cont}" arg2="Yes" casesensitive="false"
					trim="true"></equals>
				<istrue value="${get-build.cont}"></istrue>
			</or>
			<then>
				<phingcall target="get-build-setup"></phingcall>

				<echo>High-level build setup successful</echo>
				<echo>Move to directory: cd ${get-build.deploy.dst}</echo>
				<echo>Edit user-property file: vi ${get-build.user.property.filename}</echo>
				<echo>Run install project: ./bin/phing install configure link -Dbt=D -Dbu=${get-build.username}</echo>
			</then>
			<else>
				<echo>Canceled</echo>
			</else>
		</if>
	</target>

	<target name="get-build-properties">
		<propertyprompt propertyName="get-build.project_build_name"
			promptText="Enter project build name" />
		<propertyprompt propertyName="get-build.deploy.svn.src"
			defaultValue="https://TheRatG@github.com/TheRatG/${get-build.project_build_name}"
			promptText="Enter project build url" />
		<propertyprompt propertyName="get-build.deploy.dst"
			defaultValue="/www/build/${get-build.project_build_name}" promptText="Enter build save path" />

		<echo>Project build name: ${get-build.project_build_name}</echo>
		<echo>Svn checkout url: ${get-build.deploy.svn.src}</echo>
		<echo>Checkout to: ${get-build.deploy.dst}</echo>

		<if>
			<available file="${get-build.deploy.dst}"></available>
			<then>
				<echo level="warning">File ${get-build.deploy.dst} exists</echo>
				<propertyprompt propertyName="get-build.cont"
					defaultValue="No" promptCharacter="Yes|No" promptText="Do you want continue?" />
			</then>
			<else>
				<property name="get-build.cont" value="Yes"></property>
			</else>
		</if>
		
		<exec command="whoami" outputProperty="get-build.username"></exec>		
		<property name="get-build.user.property.filename"
			value="${get-build.deploy.dst}/properties/extends/users/${get-build.username}.xml" />
	</target>

	<target name="get-build-setup">
		<exec
			command="svn checkout ${get-build.deploy.svn.src} ${get-build.deploy.dst}"
			logoutput="true" checkreturn="true"></exec>
			
		<resolvepath propertyName="get-build.basedir_parent" file="${project.basedir}/.."/>
		
		<if>
			<not>
				<equals arg1="${get-build.deploy.dst}" arg2="${get-build.basedir_parent}"></equals>
			</not>
			<then>
				<symlink target="${project.basedir}" link="${get-build.deploy.dst}/haru"
					overwrite="true" />
			</then>
		</if>		
		
		<if>
			<not>
				<available file="${get-build.user.property.filename}" />
			</not>
			<then>
				<copy file="${get-build.deploy.dst}/properties/extends/users/example.xml"
					tofile="${get-build.user.property.filename}" overwrite="true" />
			</then>
		</if>
	</target>
</project>